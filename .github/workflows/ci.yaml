name: CI

# Workflow name based on selected inputs. Fallback to default Github naming when expression evaluates to empty string
run-name: >-
  ${{
    inputs.release && 'CI âž¤ Publish to NPM' ||
    ''
  }}

permissions:
  contents: write # to be able to publish a GitHub release
  issues: write # to be able to comment on released issues
  pull-requests: write # to be able to comment on released pull requests
  id-token: write # to enable use of OIDC for npm provenance

on:
  pull_request:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      release:
        description: 'Publish new release'
        required: true
        default: false
        type: boolean

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-modules-${{ env.cache-name }}-
            ${{ runner.os }}-modules-
            ${{ runner.os }}-
      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npx playwright install && npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run tests
        run: npm test

  release:
    needs: [test]
    # only run if opt-in during workflow_dispatch
    if: always() && github.event.inputs.release == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # Need to fetch entire commit history to
          # analyze every commit since last release
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-modules-${{ env.cache-name }}-
            ${{ runner.os }}-modules-
            ${{ runner.os }}-
      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci
        # Branches that will release new versions are defined in .releaserc.json
      - run: npx semantic-release
        # Don't allow interrupting the release step if the job is cancelled, as it can lead to an inconsistent state
        # e.g. git tags were pushed but it exited before `npm publish`
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
